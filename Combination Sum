class Solution {
    public List<List<Integer>> combinationSum(int[] arr, int target) {
       
        Arrays.sort(arr);
        List<List<Integer>> res = new ArrayList<>();
        helper(arr, res, target, new ArrayList<>(), 0);
        return res;
    }
   public void helper(int[] arr, List<List<Integer>> res, int target, List<Integer> output, int index){

      if(target == 0){
          res.add(new ArrayList<>(output));
          return;
      }

      for(int i = index; i < arr.length; i++){
          if(arr[i] > target)
          break;

          output.add(arr[i]);
          helper(arr, res, target-arr[i], output, i);
          output.remove(output.size()-1);
      }

    }
}
