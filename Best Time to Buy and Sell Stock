class Solution {
    public int maxProfit(int[] prices) {
        
        Stack<Integer> stk = new Stack<>();
        int diff = 0;
        int n =  prices.length;

        for(int i = n-1; i >= 0; i--){
            if(stk.isEmpty()){
                stk.push(prices[i]);
            }
            else{
                while(!stk.isEmpty() && stk.peek() < prices[i]){
                    stk.pop();
                }

                if(!stk.isEmpty()){
                   diff =  Math.max(diff, stk.peek() - prices[i]);
                }
                else
                {
                    stk.push(prices[i]);
                }

            }
        }

        return diff;

    }
}
