class Solution {
    class pair{
        int ele, val;
        pair(int ele, int val){
            this.ele = ele;
            this.val = val;
        }
    }
    public int[] topKFrequent(int[] nums, int k) {
  
        PriorityQueue<pair> pq = new PriorityQueue<>((a, b) -> b.val-a.val);
        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i = 0 ; i < nums.length; i++){
            int ele = nums[i];
            map.put(ele, map.getOrDefault(ele, 0)+1);
        }

        for(Integer it : map.keySet()){
            int val = map.get(it);
            pq.add(new pair(it, val));
        }
        int res[] = new int[k];
        int i = 0;
        while(!pq.isEmpty() && k > 0){
            res[i] = pq.poll().ele;
            i++;
            k--;
        }

        return res;
    }
}
